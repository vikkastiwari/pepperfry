version: "3.8"

services:
  # Our NestJS Api
  nestis-backend:
    build:
      dockerfile: Dockerfile
      context: ./nestjs-backend
      # Only build development stage from Dockerfile
      target: development
    # Mount our host dir to the docker container
    # Mount api directory (./nestis-backend) to (:) docker container (/pepperfry/src/app)
    # Reflect File changes from host to container
    volumes:
      - ./nestis-backend:/pepperfry/src/app
      - /pepperfry/src/app/node_modules/
    # RUN in debug mode: npm run start:debug --> Also start your vscode debugger
    # Run in dev mode: npm run start:dev
    command: npm run start:debug
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://urhuhujw:7VF9560KOVlW1f7FCdUW1YbHoBrzgVv3@castor.db.elephantsql.com/urhuhujw
      NODE_ENV: development
      JWT_SECRET: secretKey
      PORT: 3000
    ports:
      - 3000:3000
      - 9229:9229

  # Our Angular Frontend
  my-app:
    build:
      dockerfile: Dockerfile
      context: ./my-app
      target: development
    command: npm run start
    volumes:
      - ./my-app:/pepperfry/my-app/src/app
      - /pepperfry/my-app/src/app/node_modules
    ports:
      - 4200:4200
    links:
      - nestis-backend

  # Our Postgres Database for NestJS to connect to
  postgres:
    image: postgres:10.4
    environment:
      POSTGRES_USER: urhuhujw
      POSTGRES_PASSWORD: 7VF9560KOVlW1f7FCdUW1YbHoBrzgVv3
      POSTGRES_DB: database
    ports:
      - 35000:5432

  # The Postgres Admin tool if we want to run some custom queries and so on against our Database
  postgres_admin:
    image: dpage/pgadmin4:4.28
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: 7VF9560KOVlW1f7FCdUW1YbHoBrzgVv3
    ports:
      - 5050:80
